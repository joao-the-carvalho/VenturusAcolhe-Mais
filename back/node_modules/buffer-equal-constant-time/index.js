/*jshint node:true */
'use strict';
const crypto = require('crypto');

module.exports = bufferEq;

function bufferEq(a, b) {
  // shortcutting on type is necessary for correctness
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    return false;
  }

  // buffer sizes should be well-known information, so despite this
  // shortcutting, it doesn't leak any information about the *contents* of the buffers.
  if (a.length !== b.length) {
    return false;
  }

  // Usando crypto.timingSafeEqual para uma comparação segura
  try {
    return crypto.timingSafeEqual(a, b);
  } catch (e) {
    // Caso algo dê errado, retorna false (por exemplo, se os buffers tiverem tamanhos diferentes)
    return false;
  }
}

bufferEq.install = function() {
  // Modificando o prototype de Buffer para incluir o método `equal`
  Buffer.prototype.equal = function(that) {
    return bufferEq(this, that);
  };
};

var origBufEqual = Buffer.prototype.equal;
bufferEq.restore = function() {
  // Restaurando o método `equal` original de Buffer
  Buffer.prototype.equal = origBufEqual;
};
